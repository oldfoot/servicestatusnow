a:23:{s:7:"attribs";a:6:{s:15:"packagerversion";s:5:"1.9.4";s:7:"version";s:3:"2.0";s:5:"xmlns";s:35:"http://pear.php.net/dtd/package-2.0";s:11:"xmlns:tasks";s:33:"http://pear.php.net/dtd/tasks-1.0";s:9:"xmlns:xsi";s:41:"http://www.w3.org/2001/XMLSchema-instance";s:18:"xsi:schemaLocation";s:147:"http://pear.php.net/dtd/tasks-1.0 http://pear.php.net/dtd/tasks-1.0.xsd http://pear.php.net/dtd/package-2.0 http://pear.php.net/dtd/package-2.0.xsd";}s:4:"name";s:6:"xdebug";s:7:"channel";s:12:"pecl.php.net";s:7:"summary";s:52:"Provides functions for function traces and profiling";s:11:"description";s:627:"The Xdebug extension helps you debugging your script by providing a lot of
valuable debug information. The debug information that Xdebug can provide
includes the following:

    * stack and function traces in error messages with:
          o full parameter display for user defined functions
          o function name, file name and line indications
          o support for member functions
    * memory allocation
    * protection for infinite recursions

Xdebug also provides:

    * profiling information for PHP scripts
    * code coverage analysis
    * capabilities to debug your scripts interactively with a debug client";s:4:"lead";a:4:{s:4:"name";s:14:"Derick Rethans";s:4:"user";s:6:"derick";s:5:"email";s:17:"derick@xdebug.org";s:6:"active";s:3:"yes";}s:4:"date";s:10:"2012-03-12";s:4:"time";s:8:"22:49:19";s:7:"version";a:2:{s:7:"release";s:5:"2.1.4";s:3:"api";s:5:"2.1.4";}s:9:"stability";a:2:{s:7:"release";s:6:"stable";s:3:"api";s:6:"stable";}s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:597:"= Fixed bugs:

	- Fixed bug #788: Collect errors eats fatal errors.
	- Fixed bug #787: Segmentation Fault with PHP header_remove().
	- Fixed bug #778: Xdebug session in Eclipse crash whenever it run into
	  simplexml_load_string call.
	- Fixed bug #756: Added support for ZEND_*_*_OBJ and self::*.
	- Fixed bug #747: Still problem with error message and soap client / soap
	  server.
	- Fixed bug #744: new lines in a PHP file from Windows are displayed with
	  an extra white line with var_dump().
	- Fixed an issue with debugging and the eval command.
	- Fixed compilation with ZTS on PHP < 5.3.";s:8:"contents";a:1:{s:3:"dir";a:2:{s:7:"attribs";a:1:{s:4:"name";s:1:"/";}s:4:"file";a:73:{i:0;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"102ef6329f8761156a14d290450d378d";s:4:"name";s:30:"contrib/tracefile-analyser.php";s:4:"role";s:3:"doc";}}i:1;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"75cb5843f8d6ff93cb5eaa7b062dc14a";s:4:"name";s:14:"contrib/xt.vim";s:4:"role";s:3:"doc";}}i:2;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"8af274ceee866a215472c2cf9d9ead03";s:4:"name";s:31:"debugclient/build/buildcheck.sh";s:4:"role";s:3:"src";}}i:3;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"e796e364148aee1796320b90431bed9b";s:4:"name";s:31:"debugclient/build/buildconf1.mk";s:4:"role";s:3:"src";}}i:4;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"4d4b8c43b0c0a5570e31761f05685a5d";s:4:"name";s:31:"debugclient/build/buildconf2.mk";s:4:"role";s:3:"src";}}i:5;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"fa89e547ca74aa76eee82ed9c4d2daeb";s:4:"name";s:26:"debugclient/build/clean.mk";s:4:"role";s:3:"src";}}i:6;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"306c941e88a71fd3522fd82228563ec9";s:4:"name";s:30:"debugclient/build/config-stubs";s:4:"role";s:3:"src";}}i:7;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"b10bdc5308cfa1bfadf88477759e8612";s:4:"name";s:24:"debugclient/acinclude.m4";s:4:"role";s:3:"src";}}i:8;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"fda34bdcb4283930f9055a263e3ddb28";s:4:"name";s:21:"debugclient/buildconf";s:4:"role";s:3:"src";}}i:9;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"253fc424977def9dd5b58f7a4b42612a";s:4:"name";s:24:"debugclient/config.guess";s:4:"role";s:3:"src";}}i:10;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"15aa53ae3adcec232c145a3fa8590c23";s:4:"name";s:23:"debugclient/config.h.in";s:4:"role";s:3:"src";}}i:11;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"c31eb7b68f55a62a2223734c80c18d1f";s:4:"name";s:22:"debugclient/config.sub";s:4:"role";s:3:"src";}}i:12;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"8b900ec741a37692c39d0de2d39a1b56";s:4:"name";s:21:"debugclient/configure";s:4:"role";s:3:"src";}}i:13;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"cc986c67ad357341baf95a1164a14387";s:4:"name";s:24:"debugclient/configure.in";s:4:"role";s:3:"src";}}i:14;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"cee6647ceb4340358991d5e65cdf5c43";s:4:"name";s:20:"debugclient/cvsclean";s:4:"role";s:3:"src";}}i:15;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"fd5909387a0942054c5fe0ca2c233cc7";s:4:"name";s:27:"debugclient/debugclient.dsp";s:4:"role";s:3:"src";}}i:16;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"2edbe869dfc213dbc78b76b47175f055";s:4:"name";s:19:"debugclient/depcomp";s:4:"role";s:3:"src";}}i:17;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"05f2f7acf75122094a96ac9670251f9d";s:4:"name";s:19:"debugclient/INSTALL";s:4:"role";s:3:"src";}}i:18;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"5afe8eb5573965dfb58378e4e46f3813";s:4:"name";s:22:"debugclient/install-sh";s:4:"role";s:3:"src";}}i:19;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"a18aadbac8e9327d347421eaf10334ee";s:4:"name";s:19:"debugclient/LICENSE";s:4:"role";s:3:"src";}}i:20;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"b7fbd439734b78299afbd21edfebc7eb";s:4:"name";s:21:"debugclient/ltmain.sh";s:4:"role";s:3:"src";}}i:21;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"7600db4063371f85a74acdb07bab57ce";s:4:"name";s:18:"debugclient/main.c";s:4:"role";s:3:"src";}}i:22;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"12535f3479bd8d4b8da8f93cba7d1058";s:4:"name";s:23:"debugclient/Makefile.in";s:4:"role";s:3:"src";}}i:23;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"d41d8cd98f00b204e9800998ecf8427e";s:4:"name";s:19:"debugclient/missing";s:4:"role";s:3:"src";}}i:24;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"20af8d0d8c9b4478a446c1dee0a0c0f0";s:4:"name";s:25:"debugclient/mkinstalldirs";s:4:"role";s:3:"src";}}i:25;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"7e0877be51efb23ade37736cd4f7f38a";s:4:"name";s:25:"debugclient/usefulstuff.c";s:4:"role";s:3:"src";}}i:26;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"a9cc9fc0e1b7991e56f997ce56858598";s:4:"name";s:25:"debugclient/usefulstuff.h";s:4:"role";s:3:"src";}}i:27;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"0b38b5e4f903060d7ea77474f6af901f";s:4:"name";s:9:"Changelog";s:4:"role";s:3:"doc";}}i:28;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"fccb7576dff9e0e04f86ed84ebe64d24";s:4:"name";s:9:"config.m4";s:4:"role";s:3:"src";}}i:29;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"6c7eb8e3429a3879e91f366ac9b1ec83";s:4:"name";s:10:"config.w32";s:4:"role";s:3:"src";}}i:30;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"8f9a93feba6ff23c4bc1bc2929babcc4";s:4:"name";s:7:"CREDITS";s:4:"role";s:3:"doc";}}i:31;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"34df3a274aa12b795417c65634c07f16";s:4:"name";s:7:"LICENSE";s:4:"role";s:3:"doc";}}i:32;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"e8b4e74da6a51c13062ffc2352cd15ab";s:4:"name";s:13:"Makefile.frag";s:4:"role";s:3:"src";}}i:33;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"491aea9e7732f8a60a426964acb8c3ed";s:4:"name";s:11:"Makefile.in";s:4:"role";s:3:"src";}}i:34;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"4b9f3173f139a4ca39a0dbc8eebf7a9d";s:4:"name";s:4:"NEWS";s:4:"role";s:3:"doc";}}i:35;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"ac1592416c6b57f1b4fe82ade3bcff44";s:4:"name";s:12:"php_xdebug.h";s:4:"role";s:3:"src";}}i:36;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"81e13d08e216627246f59d57a5fb9db9";s:4:"name";s:6:"README";s:4:"role";s:3:"doc";}}i:37;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"cfbdf449d135b34111a28430db22d847";s:4:"name";s:13:"usefulstuff.c";s:4:"role";s:3:"src";}}i:38;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"573bd5da6d7eaa4095997f6a80fc57cc";s:4:"name";s:13:"usefulstuff.h";s:4:"role";s:3:"src";}}i:39;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"540180996e13b71a3027909d332518d1";s:4:"name";s:8:"xdebug.c";s:4:"role";s:3:"src";}}i:40;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"cd891dea2d0716f1f860061878198828";s:4:"name";s:22:"xdebug_code_coverage.c";s:4:"role";s:3:"src";}}i:41;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"a90bed6147d65cb9ae519ce21a97d477";s:4:"name";s:22:"xdebug_code_coverage.h";s:4:"role";s:3:"src";}}i:42;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"e880cae8b84be292b703f588c4b5bb58";s:4:"name";s:12:"xdebug_com.c";s:4:"role";s:3:"src";}}i:43;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"58b9f5b2c0552ea1db12269c2f29fb5b";s:4:"name";s:12:"xdebug_com.h";s:4:"role";s:3:"src";}}i:44;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"6fd37724a1678cb54f2aea4fe5c644d1";s:4:"name";s:15:"xdebug_compat.c";s:4:"role";s:3:"src";}}i:45;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"79fa12027548338e65ba28604204f2de";s:4:"name";s:15:"xdebug_compat.h";s:4:"role";s:3:"src";}}i:46;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"56e597b16fabc715a7575b8d41019df2";s:4:"name";s:17:"xdebug_handlers.c";s:4:"role";s:3:"src";}}i:47;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"28a73e54f40c86890f75dc9c73b1f2bd";s:4:"name";s:17:"xdebug_handlers.h";s:4:"role";s:3:"src";}}i:48;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"5209dc73607c469a49999aaeb6619a0b";s:4:"name";s:21:"xdebug_handler_dbgp.c";s:4:"role";s:3:"src";}}i:49;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"77fb30f4f1573292abf3c82798358498";s:4:"name";s:21:"xdebug_handler_dbgp.h";s:4:"role";s:3:"src";}}i:50;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"d519346cf080248d88a03bc64e06ab35";s:4:"name";s:13:"xdebug_hash.c";s:4:"role";s:3:"src";}}i:51;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"3046c77469cdbe52fe3f6aa346e35724";s:4:"name";s:13:"xdebug_hash.h";s:4:"role";s:3:"src";}}i:52;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"2e2522cbd6f0f899cf6581121d66a82f";s:4:"name";s:14:"xdebug_llist.c";s:4:"role";s:3:"src";}}i:53;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"b26fc856404cb6745781fcfd0c7d2542";s:4:"name";s:14:"xdebug_llist.h";s:4:"role";s:3:"src";}}i:54;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"0aa52a698a0d868a4a85704f9cd30b7e";s:4:"name";s:11:"xdebug_mm.h";s:4:"role";s:3:"src";}}i:55;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"9b7b8ff7acf23f92e165cb2420f15ae9";s:4:"name";s:16:"xdebug_private.c";s:4:"role";s:3:"src";}}i:56;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"fc7a7346cde50ef5d71dcb816128fc4d";s:4:"name";s:16:"xdebug_private.h";s:4:"role";s:3:"src";}}i:57;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"1d938d4d1cdb670815c51a8cd474303f";s:4:"name";s:17:"xdebug_profiler.c";s:4:"role";s:3:"src";}}i:58;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"63bc2a674faf31b9f35d9a71a778d91a";s:4:"name";s:17:"xdebug_profiler.h";s:4:"role";s:3:"src";}}i:59;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"b05d54b8eb9fc61caf259b573b1c849b";s:4:"name";s:12:"xdebug_set.c";s:4:"role";s:3:"src";}}i:60;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"d8b305e62454116ecca3a5009d8258f5";s:4:"name";s:12:"xdebug_set.h";s:4:"role";s:3:"src";}}i:61;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"3fb08ae5c28cbbcdb63501f6afcc23a6";s:4:"name";s:14:"xdebug_stack.c";s:4:"role";s:3:"src";}}i:62;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"76b11bd787450564328853f20c70f35a";s:4:"name";s:14:"xdebug_stack.h";s:4:"role";s:3:"src";}}i:63;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"42411a33c1af60ff82e8676cacc1e6e4";s:4:"name";s:12:"xdebug_str.c";s:4:"role";s:3:"src";}}i:64;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"6c9907a7f6dedcb1ad54d81bd8589ff2";s:4:"name";s:12:"xdebug_str.h";s:4:"role";s:3:"src";}}i:65;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"ffdaaa18361cbf9ccda52c2c62bcfe25";s:4:"name";s:21:"xdebug_superglobals.c";s:4:"role";s:3:"src";}}i:66;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"a08a736091c107a725f73e3ccf62329f";s:4:"name";s:21:"xdebug_superglobals.h";s:4:"role";s:3:"src";}}i:67;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"22197432de81037cd6f41e6ace29240c";s:4:"name";s:16:"xdebug_tracing.c";s:4:"role";s:3:"src";}}i:68;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"1fb0cf8c516c4328296c6833a1bb2235";s:4:"name";s:16:"xdebug_tracing.h";s:4:"role";s:3:"src";}}i:69;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"f5ba3510ac2725170e3687ea22da6a41";s:4:"name";s:12:"xdebug_var.c";s:4:"role";s:3:"src";}}i:70;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"9a30f3500827d1e21ea070463518a0fe";s:4:"name";s:12:"xdebug_var.h";s:4:"role";s:3:"src";}}i:71;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"73d6b0a3bab4675d740225e60454a400";s:4:"name";s:12:"xdebug_xml.c";s:4:"role";s:3:"src";}}i:72;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"265bccc2c58cd0301f609fa136269eec";s:4:"name";s:12:"xdebug_xml.h";s:4:"role";s:3:"src";}}}}}s:12:"dependencies";a:1:{s:8:"required";a:2:{s:3:"php";a:1:{s:3:"min";s:5:"5.1.0";}s:13:"pearinstaller";a:1:{s:3:"min";s:7:"1.4.0b1";}}}s:17:"providesextension";s:6:"xdebug";s:13:"extsrcrelease";s:0:"";s:9:"changelog";a:1:{s:7:"release";a:39:{i:0;a:5:{s:7:"version";a:2:{s:7:"release";s:5:"2.1.4";s:3:"api";s:5:"2.1.4";}s:9:"stability";a:2:{s:7:"release";s:6:"stable";s:3:"api";s:6:"stable";}s:4:"date";s:10:"2012-03-12";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:596:"= Fixed bugs:

	- Fixed bug #788: Collect errors eats fatal errors.
	- Fixed bug #787: Segmentation Fault with PHP header_remove().
	- Fixed bug #778: Xdebug session in Eclipse crash whenever it run into
	  simplexml_load_string call.
	- Fixed bug #756: Added support for ZEND_*_*_OBJ and self::*.
	- Fixed bug #747: Still problem with error message and soap client / soap
	  server.
	- Fixed bug #744: new lines in a PHP file from Windows are displayed with
	  an extra white line with var_dump().
	- Fixed an issue with debugging and the eval command.
	- Fixed compilation with ZTS on PHP < 5.3";}i:1;a:5:{s:7:"version";a:2:{s:7:"release";s:5:"2.1.3";s:3:"api";s:5:"2.1.3";}s:9:"stability";a:2:{s:7:"release";s:6:"stable";s:3:"api";s:6:"stable";}s:4:"date";s:10:"2012-01-25";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:1174:"= Fixed bugs:
    
	- Fixed bug #725: EG(current_execute_data) is not checked in xdebug.c,
	  xdebug_statement_call.
	- Fixed bug #723: xdebug is stricter than PHP regarding Exception property
	  types.
	- Fixed bug #714: Cachegrind files have huge (wrong) numbers in some lines.
	- Fixed bug #709: Xdebug doesn't understand E_USER_DEPRECATED.
	- Fixed bug #698: Allow xdebug.remote_connect_back to be set in .htaccess.
	- Fixed bug #690: Function traces are not appended to file with
	  xdebug_start_trace() and xdebug.trace_options=1.
	- Fixed bug #623: Static properties of a class can be evaluated only with
	  difficulty.
	- Fixed bug #614/#619: Viewing private variables in base classes through
	  the debugger.
	- Fixed bug #609: Xdebug and SOAP extension's error handlers conflict.
	- Fixed bug #606/#678/#688/#689/#704: crash after using eval on an
	  unparsable, or un-executable statement.
	- Fixed bug #305: xdebug exception handler doesn't properly handle special
	  chars.

+ Changes:

	- Changed xdebug_break() to hint to the statement execution trap instead of
	  breaking forcefully adding an extra stackframe.
	- Prevent Xdebug 2.1.x to build with PHP 5.4.";}i:2;a:5:{s:7:"version";a:2:{s:7:"release";s:5:"2.1.2";s:3:"api";s:5:"2.1.2";}s:9:"stability";a:2:{s:7:"release";s:6:"stable";s:3:"api";s:6:"stable";}s:4:"date";s:10:"2011-07-28";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:491:"= Fixed bugs:

	- Fixed bug #622: Working with eval() code is inconvenient and difficult.
	- Fixed bug #684: xdebug_var_dump - IE does not support &.
	- Fixed bug #693: Cachegrind files not written when filename is very long.
	- Fixed bug #697: Incorrect code coverage of function arguments when using
	  XDEBUG_CC_UNUSED.
	- Fixed bug #699: Xdebug gets the filename wrong for the countable
	  interface.
	- Fixed bug #703 by adding another opcode to the list that needs to be
	  overridden.";}i:3;a:5:{s:7:"version";a:2:{s:7:"release";s:5:"2.1.1";s:3:"api";s:5:"2.1.1";}s:9:"stability";a:2:{s:7:"release";s:6:"stable";s:3:"api";s:6:"stable";}s:4:"date";s:10:"2011-03-28";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:75:"Mon, Mar 28, 2011 - xdebug 2.1.1

= Fixed bugs:

  - Fixed ZTS compilation.";}i:4;a:5:{s:7:"version";a:2:{s:7:"release";s:8:"2.1.1RC1";s:3:"api";s:8:"2.1.1RC1";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2011-03-22";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:1133:"Tue, Mar 22, 2011 - xdebug 2.1.1rc1

= Fixed bugs:

  = Debugger
	- Fixed bug #518: Removed CLASSNAME pseudo-property optional.
	- Fixed bug #592: Xdebug crashes with run after detach.
	- Fixed bug #596: Call breakpoint never works with instance methods, only
	  static methods.
	- Fixed JIT mode in the debugger so that it works for xdebug_break() too.

  = Profiler
	- Fixed bug #631: Summary not written when script ended with "exit()".
	- Fixed bug #639: Xdebug profiling: output not correct - missing 'cfl='.
	- Fixed bug #642: Fixed line numbers for offsetGet, offsetSet,
	  __get/__set/__isset/__unset and __call in profile files and stack
	  traces/function traces.
	- Fixed bug #643: Profiler gets line numbers wrong.
	- Fixed bug #653: XDebug profiler crashes with %H in file name and non
	  standard port.

  = Others
	- Fixed bug #651: Incorrect code coverage after empty() in conditional.
	- Fixed bug #654: Xdebug hides error message in CLI.
	- Fixed bug #665: Xdebug does not respect display_errors=stderr.
	  Patch by Ben Spencer <dangerous.ben@gmail.com>
	- Fixed bug #670: Xdebug crashes with broken "break x" code.";}i:5;a:5:{s:7:"version";a:2:{s:7:"release";s:5:"2.1.0";s:3:"api";s:5:"2.1.0";}s:9:"stability";a:2:{s:7:"release";s:6:"stable";s:3:"api";s:6:"stable";}s:4:"date";s:10:"2010-06-29";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:370:"Tue, Jun 29, 2010 - xdebug 2.1.0

= Fixed bugs:
	- Fixed bug #562: Incorrect coverage information for closure function
	  headers.
	- Fixed bug #566: Xdebug crashes when using conditional breakpoints.
	- Fixed bug #567: xdebug_debug_zval and xdebug_debug_zval_stdout don't work
	  with PHP 5.3. (Patch by Endo Hiroaki).
	- Fixed bug #570: undefined symbol: zend_memrchr.";}i:6;a:5:{s:7:"version";a:2:{s:7:"release";s:8:"2.1.0RC1";s:3:"api";s:8:"2.1.0RC1";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2010-02-27";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:568:"Thu, Apr 06, 2010 - xdebug 2.1.0rc1

= Fixed bugs:
	- Fixed bug #494: Private attributes of parent class unavailable when
	  inheriting.
	- Fixed bug #400: Xdebug shows errors, even when PHP is request startup
	  mode.
	- Fixed bug #421: xdebug sends back invalid characters in xml sometimes.
	- Fixed bug #475: Property names with null chars are not sent fully to the
	  client.
	- Fixed bug #480: Issues with the reserved resource in multi threaded
	  environments (Patch by Francis.Grolemund@netapp.com).
	- Fixed bug #558: PHP segfaults when running a nested eval.";}i:7;a:5:{s:7:"version";a:2:{s:7:"release";s:10:"2.1.0beta3";s:3:"api";s:10:"2.1.0beta3";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2010-02-27";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:294:"Sat, Feb 27, 2010 - xdebug 2.1.0beta3

= Fixed bugs:
	- Fixed memory corruption issues.
	- Fixed a threading related issue for code-coverage.
	- Fixed bug #532: XDebug breaks header() function.
	- DBGP: Prevent Xdebug from returning properties when a too high page number
	  has been requested.";}i:8;a:5:{s:7:"version";a:2:{s:7:"release";s:10:"2.1.0beta2";s:3:"api";s:10:"2.1.0beta2";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2010-02-03";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:505:"Wed, Feb 03, 2010 - xdebug 2.1.0beta2

= Fixed bugs:
	- Fixed memory leak in breakpoint handling.
	- Fixed bug #528: Core dump generated with remote_connect_back option set
	  and CLI usage.
	- Fixed bug #515: declare(ticks) statement confuses code coverage.
	- Fixed bug #512: DBGP: breakpoint_get doesn't return conditions in its
	  response.
	- Possible fix for bug #507/#517: Crashes because of uninitalised header
	  globals.
	- Fixed bug #501: Xdebug's variable tracing misses POST_INC and variants.";}i:9;a:5:{s:7:"version";a:2:{s:7:"release";s:10:"2.1.0beta1";s:3:"api";s:10:"2.1.0beta1";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2010-01-03";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:5809:"Sun, Jan 03, 2010 - xdebug 2.1.0beta1

+ Added features:
	- Added error display collection and suppressions.
	- Added the recording of headers being set in scripts.
	- Added variable assignment tracing.
	- Added the ability to turn of the default overriding of var_dump().
	- Added "Scream" support, which disables the @ operator.
	- Added a trace-file analysing script.
	- Added support for debugging into phars.
	- Added a default xdebug.ini. (Patch by Martin SchuhfuÃ
	  <martins@spot-media.de>)
	- Added function parameters in computerized function traces.
	- PHP 5.3 compatibility.
	- Improved code coverage accuracy.

  + New functions:
	- xdebug_get_formatted_function_stack(), which returns a formatted function
	  stack instead of displaying it.
	- xdebug_get_headers(), which returns all headers that have been set in a
	  script, both explicitly with things like header(), but also implicitly
	  for things like setcookie().
	- xdebug_start_error_collection(), xdebug_stop_error_collection() and
	  xdebug_get_collected_errors(), which allow you to collect all notices,
	  warnings and error messages that Xdebug generates from PHP's
	  error_reporting functionality so that you can output them at a later
	  point in your script by hand.

  + New settings:
	- xdebug.collect_assignments, which enables the emitting of variable
	  assignments in function traces.
	- xdebug.file_line_format, to generate a link with a specific format for 
	  every filename that Xdebug outputs.
	- xdebug.overload_var_dump, which allows you to turn off Xdebug's version
	  of var_dump().
	- xdebug.remote_cookie_expire_time, that controls the length of a
	  remote debugging session. (Patch by Rick Pannen <pannen@gmail.com>)
	- xdebug.scream, which makes the @ operator to be ignored.

+ Changes:
	- Added return values for xdebug_start_code_coverage() and
	  xdebug_stop_code_coverage() to indicate whether the action was
	  succesfull.  xdebug_start_code_coverage() will return TRUE if the call
	  enabled code coverage, and FALSE if it was already enabled.
	  xdebug_stop_code_coverage() will return FALSE when code coverage wasn't
	  started yet and TRUE if it was turned on.
	- Added an optional argument to xdebug_print_function_stack() to display
	  your own message. (Patch by Mikko Koppanen).
	- All HTML output as generated by Xdebug now has a HTML "class" attribute
	  for easy CSS formatting.

- Removed features:
	- Support for PHP versions lower than PHP 5.1 have been dropped.
	- The PHP3 and GDB debugger engines have been removed.

= Fixed bugs:
	- Fixed support for showing $this in remote debugging sessions.
	- Fixed bug in formatting the display of "Variables in the local scope".
	- Possible fix for a threading issue where the headers gathering function
	  would create stack overflows.
	- Possible fix for #324: xdebug_dump_superglobals() only dumps superglobals
	  that were accessed before, and #478: XDebug 2.0.x can't use %R in
	  xdebug.profiler_output_name if register_long_arrays is off.

	- Fixed bug #505: %s in xdebug.trace_output_name breaks functions traces.
	- Fixed bug #494: Private attributes of parent class unavailable when
	  inheriting.
	- Fixed bug #486: feature_get -n breakpoint_types returns out of date list.
	- Fixed bug #476: Xdebug doesn't support PHP 5.3's exception chaining.
	- Fixed bug #472: Dead Code Analysis for code coverage messed up after goto.
	- Fixed bug #470: Catch blocks marked as dead code unless executed.
	- Fixed bug #469: context_get for function variables always appear as
	  "uninitialized".
	- Fixed bug #468: Property_get on $GLOBALS works only at top-level, by
	  adding GLOBALS to the super globals context.
	- Fixed bug #453: Memory leaks.
	- Fixed bug #445: error_prepend_string and error_append_string are ignored
	  by xdebug_error_cb. (Patch by Kent Davidson <kent@marketruler.com>)
	- Fixed bug #442: configure: error: "you have strange libedit".
	- Fixed bug #439: Xdebug crash in xdebug_header_handler.
	- Fixed bug #423: Conflicts with funcall.
	- Fixed bug #419: Make use of P_tmpdir if defined instead of hard coded
	  '/tmp'.
	- Fixed bug #417: Response of context_get may lack page and pagesize
	  attributes.
	- Fixed bug #411: Class/function breakpoint setting does not follow the
	  specs.
	- Fixed bug #393: eval returns array data at the previous page request.
	- Fixed bug #391: Xdebug doesn't stop executing script on catchable fatal
	  errors.
	- Fixed bug #389: Destructors called on fatal error.
	- Fixed bug #368: Xdebug's debugger bails out on a parse error with the
	  eval command.
	- Fixed bug #356: Temporary breakpoints persist.
	- Fixed bug #355: Function numbers in trace files weren't unique.
	- Fixed bug #340: Segfault while throwing an Exception.
	- Fixed bug #328: Private properties are incorrectly enumerated in case of
	  extended classes.
	- Fixed bug #249: Xdebug's error handler messes up with the SOAP
	  extension's error handler.

+ DBGP:
	- Fixed cases where private properties where shown for objects, but not
	  accessible.
	- Added a patch by Lucas Nealan (lucas@php.net) and Brian Shire
	  (shire@php.net) of Facebook to allow connections to the initiating
	  request's IP address for remote debugging.
	- Added the -p argument to the eval command as well, pending inclusion into
	  DBGP.
	- Added the retrieval of a file's execution lines. I added a new
	  un-official method called xcmd_get_executable_lines which requires the
	  stack depth as argument (-d). You can only fetch this information for
	  stack frames as it needs an available op-array which is only available
	  when a function is executed.
	- Added a fake "CLASSNAME" property to objects that are returned in debug
	  requests to facilitate deficiencies in IDEs that fail to show the "classname"
	  XML attribute.";}i:10;a:5:{s:7:"version";a:2:{s:7:"release";s:5:"2.0.5";s:3:"api";s:5:"2.0.5";}s:9:"stability";a:2:{s:7:"release";s:6:"stable";s:3:"api";s:6:"stable";}s:4:"date";s:10:"2009-07-03";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:559:"Fri, Jul 03, 2009 - xdebug 2.0.5

= Fixed bugs:
	- Fixed bug #425: memory leak (around 40MB for each request) when using
	  xdebug_start_trace.
	- Fixed bug #422: Segfaults when using code coverage with a parse error in
	  the script.
	- Fixed bug #418: compilation breaks with CodeWarrior for NetWare.
	- Fixed bug #403: 'call' and 'return' breakpoints triggers both on call and
	  return for class method breakpoints.
	- Fixed TSRM issues for PHP 5.2 and PHP 5.3. (Original patch by Elizabeth
	  M. Smith).
	- Fixed odd crash bugs, due to GCC 4 sensitivity.";}i:11;a:5:{s:7:"version";a:2:{s:7:"release";s:5:"2.0.4";s:3:"api";s:5:"2.0.4";}s:9:"stability";a:2:{s:7:"release";s:6:"stable";s:3:"api";s:6:"stable";}s:4:"date";s:10:"2008-12-30";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:1316:"Tue, Dec 30, 2008 - xdebug 2.0.4

= Fixed bugs:
	- Fixed for strange jump positions in path analysis.
	- Fixed issues with code coverage crashing on parse errors.
	- Fixed code code coverage by overriding more opcodes.
	- Fixed issues with Xdebug stalling/crashing when detaching from remote
	  debugging.
	- Fixed crash on Vista where memory was freed with routines from a different
	  standard-C library than it was allocated with. (Patch by Eric Promislow
	  <ericp@activestate.com>).
	- Link against the correct CRT library. (Patch by Eric Promislow
	  <ericp@activestate.com>).
	- Sort the symbol elements according to name. (Patch by Eric Promislow
	  <ericp@activestate.com>).
	- Fixed support for mapped-drive UNC paths for Windows. (Patch by Eric
	  Promislow <ericp@activestate.com>).
	- Fixed a segfault in interactive mode while including a file.
	- Fixed a crash in super global dumping in case somebody was strange enough
	  to reassign them to a value type other than an Array.
	- Simplify version checking for libtool. (Patch by PGNet
	  <pgnet.trash@gmail.com>).
	- Fixed display of unused returned variables from functions in PHP 5.3.
	- Include config.w32 in the packages as well.
	- Fixed .dsp for building with PHP 4.

+ Added features:
	- Support debugging into phars.
	- Basic PHP 5.3 support.";}i:12;a:5:{s:7:"version";a:2:{s:7:"release";s:5:"2.0.3";s:3:"api";s:5:"2.0.3";}s:9:"stability";a:2:{s:7:"release";s:6:"stable";s:3:"api";s:6:"stable";}s:4:"date";s:10:"2008-04-09";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:443:"Wed, Apr 09, 2008 - xdebug 2.0.3

= Fixed bugs:
	- Fixed bug #338: Crash with: xdebug.remote_handler=req.
	- Fixed bug #334: Code Coverage Regressions.
	- Fixed abstract method detection for PHP 5.3.
	- Fixed code coverage dead-code detection.
	- Ignore ZEND_ADD_INTERFACE, which is on a different line in PHP >= 5.3 for
	  some weird reason.

+ Changes:
	- Added a CSS-class for xdebug's var_dump().
	- Added support for the new E_DEPRECATED.";}i:13;a:5:{s:7:"version";a:2:{s:7:"release";s:5:"2.0.2";s:3:"api";s:5:"2.0.2";}s:9:"stability";a:2:{s:7:"release";s:6:"stable";s:3:"api";s:6:"stable";}s:4:"date";s:10:"2007-11-11";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:523:"Sun, Nov 11, 2007 - xdebug 2.0.2

= Fixed bugs:
	- Fixed bug #325: DBGP: "detach" stops further sessions being established
	  from Apache.
	- Fixed bug #321: Code coverage crashes on empty PHP files.
	- Fixed bug #318: Segmentation Fault in code coverage analysis.
	- Fixed bug #315: Xdebug crashes when including a file that doesn't exist.
	- Fixed bug #314: PHP CLI Error Logging thwarted when XDebug Loaded.
	- Fixed bug #300: Direction of var_dump().
	- Always set the transaction_id and command. (Related to bug #313).";}i:14;a:5:{s:7:"version";a:2:{s:7:"release";s:5:"2.0.1";s:3:"api";s:5:"2.0.1";}s:9:"stability";a:2:{s:7:"release";s:6:"stable";s:3:"api";s:6:"stable";}s:4:"date";s:10:"2007-10-29";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:651:"Sat, Oct 20, 2007 - xdebug 2.0.1

+ Changes:
	- Improved code coverage performance dramatically.
	- PHP 5.3 compatibility (no namespaces yet though).
	
= Fixed bugs:
	- Fixed bug #301: Loading would cause SIGBUS on Solaris 10 SPARC. (Patch by
	  Sean Chalmers)
	- Fixed bug #300: Xdebug does not force LTR rendering for its tables.
	- Fixed bug #299: Computerized traces don't have a newline for return
	  entries if memory limit is not enabled.
	- Fixed bug #298: xdebug_var_dump() doesn't handle entity replacements
	  correctly concerning string length.
	- Fixed a memory free error related to remote debugging conditions.
	  (Related to bug #297).";}i:15;a:5:{s:7:"version";a:2:{s:7:"release";s:5:"2.0.0";s:3:"api";s:5:"2.0.0";}s:9:"stability";a:2:{s:7:"release";s:6:"stable";s:3:"api";s:6:"stable";}s:4:"date";s:10:"2007-07-18";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:1434:"Wed, Jul 18, 2007 - xdebug 2.0.0

+ Changes:
	- Put back the disabling of stack traces - apperently people were relying
	  on this. This brings back xdebug_enable(), xdebug_disable() and
	  xdebug_is_enabled().
	- xdebug.collect_params is no longer a boolean setting. Although it worked
	  fine, phpinfo() showed only just On or Off here.
	- Fixed the Xdebug version of raw_url_encode to not encode : and \. This is
	  not necessary according to the RFCs and it makes debug breakpoints work
	  on Windows.

= Fixed bugs:
	- Fixed bug #291: Tests that use SPL do not skip when SPL is not available.
	- Fixed bug #290: Function calls leak memory.
	- Fixed bug #289: Xdebug terminates connection when eval() is run in the
	  init stage.
	- Fixed bug #284: Step_over on breakpointed line made Xdebug break twice.
	- Fixed bug #283: Xdebug always returns $this with the value of last stack
	  frame.
	- Fixed bug #282: %s is not usable for xdebug.profiler_output_name on
	  Windows in all stack frames.
	- Fixed bug #280: var_dump() doesn't display key of array as expected.
	- Fixed bug #278: Code Coverage Issue.
	- Fixed bug #273: Remote debugging: context_get does not return context id.
	- Fixed bug #270: Debugger aborts when PHP's eval() is encountered. 
	- Fixed bug #265: XDebug breaks error_get_last() .
	- Fixed bug #261: Code coverage issues by overloading zend_assign_dim.

+ DBGP:
	- Added support for "breakpoint_languages".";}i:16;a:5:{s:7:"version";a:2:{s:7:"release";s:8:"2.0.0RC4";s:3:"api";s:8:"2.0.0RC4";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2007-05-17";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:1798:"Wed, May 17, 2007 - xdebug 2.0.0rc4
+ Changes:
	- Use Âµ seconds instead of a tenths of Âµ seconds to avoid confusion in
	  profile information.
	- Changed xdebug.profiler_output_name and xdebug.trace_output_name to use
	  modifier tags:
	  %c = crc32 of the current working directory
	  %p = pid
	  %r = random number
	  %s = script name
	  %t = timestamp (seconds)
	  %u = timestamp (microseconds)
	  %H = $_SERVER['HTTP_HOST']
	  %R = $_SERVER['REQUEST_URI']
	  %S = session_id (from $_COOKIE if set)
	  %% = literal %

= Fixed bugs:
	- Fixed bug #255: Call Stack Table doesn't show Location on Windows.
	- Fixed bug #251: Using the source command with an invalid filename returns
	  unexpected result.
	- Fixed bug #243: show_exception_trace="0" ignored.
	- Fixed bug #241: Crash in xdebug_get_function_stack().
	- Fixed bug #240: Crash with xdebug.remote_log on Windows.
	- Fixed a segfault in rendering stack traces to error logs.
	- Fixed a bug that prevented variable names from being recorded for remote
	  debug session while xdebug.collect_vars was turned off.
	- Fixed xdebug_dump_superglobals() in case no super globals were
	  configured.

- Removed functions:
	- Removed support for Memory profiling as that didn't work properly.
	- Get rid of xdebug.default_enable setting and associated functions:
	  xdebug_disable() and xdebug_enable().

+ Added features:
	- Implemented support for four different xdebug.collect_params settings for
	  stack traces and function traces.
	- Allow to trigger profiling by the XDEBUG_PROFILE cookie.

+ DBGP:
	- Correctly add namespace definitions to XML.
	- Added the xdebug namespace that adds extra information to breakpoints if
	  available.
	- Stopped the use of >error> elements for exception breakpoints, as that
	  violates the protocol.";}i:17;a:5:{s:7:"version";a:2:{s:7:"release";s:8:"2.0.0RC3";s:3:"api";s:8:"2.0.0RC3";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2007-01-31";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:779:"Wed, Jan 31, 2007 - xdebug 2.0.0rc3
+ Changes:
	- Removed the bogus "xdebug.allowed_clients" setting - it was not
	  implemented.
	- Optimized used variable collection by switching to a linked list instead
	  of a hash. This is about 30% faster, but it needed a quick conversion to
	  hash in the case the information had to be shown to remove duplicate
	  variable names.

= Fixed bugs:
	- Fixed bug #232: PHP log_errors functionality lost after enabling xdebug
	  error handler when CLI is used.
	- Fixed problems with opening files - the filename could cause double free
	  issues.
	- Fixed memory tracking as memory_limit is always enabled in PHP 5.2.1 and
	  later.
	- Fixed a segfault that occurred when creating printable stack traces and
	  collect_params was turned off.";}i:18;a:5:{s:7:"version";a:2:{s:7:"release";s:8:"2.0.0RC2";s:3:"api";s:8:"2.0.0RC2";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2006-12-24";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:2939:"Sun, Dec 24, 2006 - xdebug 2.0.0rc2
+ Added new features:
	- Implemented the "xdebug.var_display_max_children" setting. The default is
	  set to 128 children.
	- Added types to fancy var dumping function.
	- Implemented FR #210: Add a way to stop the debug session without having
	  to execute a script. The GET/POST parameter "XDEBUG_SESSION_STOP_NO_EXEC"
	  works in the same way as XDEBUG_SESSION_STOP, except that the script will
	  not be executed.
	- DBGP: Allow postmortem analysis.
	- DBGP: Added the non-standard function xcmd_profiler_name_get.

+ Changes:
	- Fixed the issue where xdebug_get_declared_vars() did not know about
	  variables there are in the declared function header, but were not used in
	  the code. Due to this change expected arguments that were not send to a
	  function will now show up as ??? in stack and function traces in PHP 5.1
	  and PHP 5.2.
	- Allow xdebug.var_display_max_data and xdebug.var_display_max_depth
	  settings of -1 which will unlimit those settings.
	- DBGP: Sort super globals in Globals overview.
	- DBGP: Fixed a bug where error messages where not added upon errors in the
	  protocol.
	- DBGP: Change context 1 from globals (superglobals + vars in bottom most
	  stack frame) to just superglobals.

= Fixed bugs:
	- Fixed linking error on AIX by adding libm.
	- Fixed dead code analysis for THROW.
	- Fixed oparray prefill caching for code coverage.
	- Fixed the xdebug.remote_log feature work.
	- DBGP: Fixed a bug where $this did not appear in the local scoped context.
	- DBGP: Reimplemented property_set to use the same symbol fetching function
	  as property_get. We now only use eval in case no type (-t) argument was
	  given.
	- DBGP: Fixed some issues with finding out the classname, which is
	  important for fetching private properties.
	- DBGP: Fixed usage of uninitialized memory that prevented looking up
	  numerical array keys while fetching array elements not work properly.
	- Fixed bug #228: Binary safety for stream output and property fetches.
	- Fixed bug #227: The SESSION super global does not show up in the Globals
	  scope.
	- Fixed bug #225: xdebug dumps core when protocol is GDB.
	- Fixed bug #224: Compile failure on Solaris.
	- Fixed bug #219: Memory usage delta in traces don't work on PHP 5.2.0.
	- Fixed bug #215: Cannot retrieve nested arrays when the array key is a
	  numeric index.
	- Fixed bug #214: The depth level of arrays was incorrectly checked so it
	  would show the first page of a level too deep as well.
	- Fixed bug #213: Dead code analysis doesn't take catches for throws into
	  account.
	- Fixed bug #211: When starting a new session with a different idekey, the
	  cookie is not updated.
	- Fixed bug #209: Additional remote debugging session started when
	  triggering shutdown function.
	- Fixed bug #208: Socket connection attempted when XDEBUG_SESSION_STOP.
	- Fixed PECL bug #8989: Compile error with PHP 5 and GCC 2.95.";}i:19;a:5:{s:7:"version";a:2:{s:7:"release";s:8:"2.0.0rc1";s:3:"api";s:8:"2.0.0rc1";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2006-10-08";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:2571:"+ Added new features:
    - Implemented FR #70: Provide optional depth on xdebug_call_* functions.
    - Partially implemented FR #50: Resource limiting for variable display. By
      default only two levels of nested variables and max string lengths of 512
      are shown. This can be changed by setting the ini settings
      xdebug.var_display_max_depth and xdebug.var_display_max_data.
    - Implemented breakpoints for different types of PHP errors. You can now
      set an 'exception' breakpoint on "Fatal error", "Warning", "Notice" etc.
      This is related to bug #187.
    - Added the xdebug_print_function_trace() function to display a stack trace on
      demand.
    - Reintroduce HTML tracing by adding a new tracing option "XDEBUG_TRACE_HTML"
      (4).
    - Made xdebug_stop_trace() return the trace file name, so that the
      following works: <?php echo file_get_contents( xdebug_stop_trace() ); ?>
    - Added the xdebug.collect_vars setting to tell Xdebug to collect
      information about which variables are used in a scope. Now you don't need
      to show variables with xdebug.show_local_vars anymore for
      xdebug_get_declared_vars() to work.
    - Make the filename parameter to the xdebug_start_trace() function
      optional. If left empty it will use the same algorithm to pick a filename
      as when you are using the xdebug.auto_trace setting.

+ Changes:
    - Implemented dead code analysis during code coverage for:
      * abstract methods.
      * dead code after return, throw and exit.
      * implicit returns when a normal return is present.
    - Improved readability of stack traces.
    - Use PG(html_errors) instead of checking whether we run with CLI when
      deciding when to use HTML messages or plain text messages.

= Fixed bugs:
    - Fixed bug #203: PHP errors with HTML content processed incorrectly. This
      patch backs out the change that was made to fix bug #182.
    - Fixed bug #198: Segfault when trying to use a non-existing debug handler.
    - Fixed bug #197: Race condition fixes created too many files.
    - Fixed bug #196: Profile timing on Windows does not work.
    - Fixed bug #195: CLI Error after debugging session.
    - Fixed bug #193: Compile problems with PHP 5.2.
    - Fixed bug #191: File/line breakpoints are case-sensitive on Windows.
    - Fixed bug #181: Xdebug doesn't handle uncaught exception output
      correctly.
    - Fixed bug #173: Coverage produces wrong coverage.
    - Fixed a typo that prevented the XDEBUG_CONFIG option "profiler_enable"
      from working.";}i:20;a:5:{s:7:"version";a:2:{s:7:"release";s:10:"2.0.0beta6";s:3:"api";s:10:"2.0.0beta6";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2006-06-30";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:3062:"+ Added new features:
    - Implemented FR #137: feature_get for general commands doesn't have a text field.
    - Implemented FR #131: XDebug needs to implement paged child object requests.
    - Implemented FR #124: Add backtrace dumping information when exception thrown.
    - Implemented FR #70: Add feature_get breakpoint_types.
    - Added profiling aggregation functions (patch by Andrei Zmievski)
    - Implemented the "timestamp" option for the xdebug.trace_output_name and
      xdebug.profiler_output_name settings.
    - Added the xdebug.remote_log setting that allows you to log debugger
      communication to a log file for debugging. This can also be set through
      the "remote_log" element in the XDEBUG_CONFIG environment variable.
    - Added a "script" value to the profiler_output_name option.  This will write
      the profiler output to a filename that consists of the script's full path
      (using underscores). ie: /var/www/index.php becomes
      var_www_index_php_cachegrind.out. (Patch by Brian Shire).
    - DBGp: Implemented support for hit conditions for breakpoints.
    - DBGp: Added support for conditions for file/line breakpoints.
    - DBGp: Added support for hit value checking to file/line breakpoints.
    - DBGp: Added support for "exception" breakpoints.
+ Performance improvements:
    - Added a cache that prevents the code coverage functionality from running a
      "which code is executable check" on every function call, even if they
      were executed multiple times. This should speed up code coverage a lot.
    - Speedup Xdebug but only gathering information about variables in scopes when
      either remote debugging is used, or show_local_vars is enabled.
= Fixed bugs:
    - Fixed bug #184: problem with control chars in code traces
    - Fixed bug #183: property_get -n $this->somethingnonexistent crashes the
      debugger.
    - Fixed bug #182: Errors are not html escaped when being displayed.
    - Fixed bug #180: collected includes not shown in trace files. (Patch by
      Cristian Rodriguez)
    - Fixed bug #178: $php_errormsg and Track errors unavailable.
    - Fixed bug #177: debugclient fails to compile due to Bison.
    - Fixed bug #176: Segfault using SplTempFileObject.
    - Fixed bug #173: Xdebug segfaults using SPL ArrayIterator.
    - Fixed bug #171: set_time_limit stack overflow on 2nd request.
    - Fixed bug #168: Xdebug's DBGp crashes on an eval command where the
      result is an array.
    - Fixed bug #125: show_mem_delta does not calculate correct negative values on
      64bit machines.
    - Fixed bug #121: property_get -n $r[2] returns the whole hash.
    - Fixed bug #111: xdebug does not ignore set_time_limit() function during debug
      session.
    - Fixed bug #87: Warning about headers when "register_shutdown_function" used.
    - Fixed PECL bug #6940 (XDebug ignores set_time_limit)
    - Fixed Komodo bug 45484: no member data for objects in PHP debugger.
    - Suppress NOP/EXT_NOP from being marked as executable code with Code
      Coverage.";}i:21;a:5:{s:7:"version";a:2:{s:7:"release";s:10:"2.0.0beta5";s:3:"api";s:10:"2.0.0beta5";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2005-12-31";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:640:"+ Added new features:
    - Implemented FR #161: var_dump doesn't show lengths for strings.
    - Implemented FR #158: Function calls from the {main} scope always have the
      line number 0. 
    - Implemented FR #156: it's impossible to know the time taken by the last
      func call in xdebug trace mode 0.
    - Implemented FR #153: xdebug_get_declared_vars().
    
= Fixed bugs:
    - Fixed shutdown crash with ZTS on Win32
    - Fixed bad memory leak when a E_ERROR of exceeding memory_limit was
      thrown.
    - Fixed bug #154: GCC 4.0.2 optimizes too much out with -O2.
    - Fixed bug #141: Remote context_get causes segfault.";}i:22;a:5:{s:7:"version";a:2:{s:7:"release";s:10:"2.0.0beta4";s:3:"api";s:10:"2.0.0beta4";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2005-09-24";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:862:"+ Added new features:
    - Added xdebug_debug_zval_stdout().
    - Added xdebug_get_profile_filename() function which returns the current
      profiler dump file.
    - Updated for latest 5.1 and 6.0 CVS versions of PHP.
    - Added FR #148: Option to append to cachegrind files, instead of
      overwriting.
    - Implemented FR #114: Rename tests/*.php to tests/*.inc

- Changed features:
    - Allow "xdebug.default_enable" to be set everywhere.

= Fixed bugs:
    - DBGP: Xdebug should return "array" with property get, which is defined
      in the typemap to the common type "hash".
    - Fixed bug #142: xdebug crashes with implicit destructor calls.
    - Fixed bug #136: The "type" attribute is missing from stack_get returns.
    - Fixed bug #133: PHP scripts exits with 0 on PHP error.
    - Fixed bug #132: use of eval causes a segmentation fault.";}i:23;a:5:{s:7:"version";a:2:{s:7:"release";s:10:"2.0.0beta3";s:3:"api";s:10:"2.0.0beta3";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2005-05-12";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:916:"+ Added new features:
    - Added the possibility to trigger the profiler by setting
      "xdebug.profiler_enable_trigger" to 1 and using XDEBUG_PROFILE as a get
      parameter.

= Fixed bugs:
    - Fixed a segfault for when an attribute value is NULL on XML string
      generation.
    - Fixed bug #118: Segfault with exception when remote debugging.
    - Fixed bug #117: var_dump dows not work with "private".
    - Fixed bug #109: DBGP's eval will abort the script when the eval statement
      is invalid.
    - Fixed bug #108: log_only still displays some text for errors in included
      files.
    - Fixed bug #107: Code Coverage only detects executable code in used
      functions and classes.
    - Fixed bug #103: crash when running the DBGp command 'eval' on a global
      variable
    - Fixed bug #95: Segfault when deinitializing Xdebug module.
      (Patch by Maxim Poltarak <demiurg@gmail.com>)";}i:24;a:5:{s:7:"version";a:2:{s:7:"release";s:10:"2.0.0beta2";s:3:"api";s:10:"2.0.0beta2";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2004-11-28";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:1605:"+ Added new features:
    - DBGP: Added error messages to returned errors (in most cases)
  
+ Added new functions:
    - xdebug_debug_zval() to debug zvals by printing its refcounts and is_ref
      values.
  
= Changed features:
    - xdebug_code_coverage_stop() will now clean up the code coverage array,
      unless you specify FALSE as parameter.
    - The proper Xdebug type is "hash" for associative arrays.
    - Extended the code-coverage functionality by returning lines with
      executable code on them, but where not executed with a count value of -1.

= Fixed bugs:
    - DBGP: Make property_get and property_value finally work as they should,
      including retrieving information from different depths then the most top
      stack frame.
    - DBGP: Fix eval'ed $varnames in property_get.
    - DBGP: Support the -d option for property_get.
    - Fixed the exit handler hook to use the new "5.1" way of handling it;
      which fortunately also works with PHP 5.0.
    - Fixed bug #102: Problems with configure for automake 1.8.
    - Fixed bug #101: crash with set_exeception_handler() and uncatched exceptions.
    - Fixed bug #99: unset variables return the name as a string with property_get.
    - Fixed bug #98: 'longname' attribute not returned for unintialized
      property in context_get request.
    - Fixed bug #94: xdebug_sprintf misbehaves with x86_64/glibc-2.3.3
    - Fixed bug #93: Crash in lookup_hostname on x86_64
    - Fixed bug #92: xdebug_disable() doesn't disable the exception handler.
    - Fixed bug #68: Summary not written when script ended with "exit()".";}i:25;a:5:{s:7:"version";a:2:{s:7:"release";s:10:"2.0.0beta1";s:3:"api";s:10:"2.0.0beta1";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2004-09-15";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:5643:"+ Added new features:
    - Added support for the new DBGp protocol for communicating with the debug
      engine.
    - A computerized trace format for easier parsing by external programs.
    - The ability to set remote debugging features via the environment.  This
      allows an IDE to emulate CGI and still pass the configuration through to
      the debugger.  In CGI mode, PHP does not allow -d arguments.
    - Reimplementation of the tracing code, you can now only trace to file; this greatly
      enhances performance as no string representation of variables need to be
      kept in memory any more.
    - Re-implemented profiling support. Xdebug outputs information the same way
      that cachegrind does so it is possible to use Kcachegrind as front-end.
    - Xdebug emits warnings when it was not loaded as a Zend extension.
    - Added showing private, protected and public to the fancy var_dump()
      replacement function.
    - Added the setting of the TCP_NODELAY socket option to stop delays in
      transferring data to the remote debugger client. (Patch by Christof J.  Reetz)
    + DebugClient: Added setting for port to listen on and implemented running
      the previous command when pressing just enter.

+ Added new functions:
    - xdebug_get_stack_depth() to return the current stack depth level.
    - xdebug_get_tracefile_name() to retrieve the name of the tracefile. This
      is useful in case auto trace is enabled and you want to clean the trace
      file.
    - xdebug_peak_memory_usage() which returns the peak memory
      used in a script. (Only works when --enable-memory-limit was enabled)

+ Added feature requests:
    - FR #5: xdebug_break() function which interupts the script for the debug
      engine.
    - FR #30: Dump current scope information in stack traces on error.
    - FR #88: Make the url parameter XDEBUG_SESSION_START optional. So it can
      be disabled and the user does not need to add it.

+ Added new php.ini settings:
    - xdebug.auto_trace_file: to configure a trace file to write to as addition
      to the xdebug.auto_trace setting which just turns on tracing.
    - xdebug.collect_includes: separates collecting
      names of include files from the xdebug.collect_params setting.
    - xdebug.collect_return: showing return values in traces.
    - xdebug.dump_global: with which you can turn off dumping of super globals
      even in you have that configured.
    - xdebug.extended_info: turns off the generation of extended opcodes that
      are needed for stepping and breakpoints for the remote debugger. This is
      useful incase you want to profile memory usage as the generation of this
      extended info increases memory usage of oparrrays by about 33%. 
    - xdebug.profiler_output_dir: profiler output directory.
    - xdebug.profiler_enable: enable the profiler.
    - xdebug.show_local_vars: turn off the showing of local variables in the
      top most stack frame on errors.
    - xdebug.show_mem_delta: show differences between current and previous
      memory usage on a function call level.
    - xdebug.trace_options: to configure extra
      options for trace dumping:
        o XDEBUG_TRACE_APPEND option (1)

= Changed features:
    - xdebug_start_trace() now returns the filename of the tracefile (.xt is
      added to the requested name).
    - Changed default debugging protocol to dbgp instead of gdb.
    - Changed default debugger port from 17869 to 9000.
    - Changed trace file naming: xdebug.trace_output_dir is now used to
      configure a directory to dump automatic traces; the trace file name now
      also includes the pid (xdebug.trace_output_name=pid) or a crc32 checksum
      of the current working dir (xdebug.trace_output_name=crc32) and traces
      are not being appended to an existing file anymore, but simply
      overwritten.
    - Removed $this and $GLOBALS from showing variables in the local scope.

- Removed functions:
    - xdebug_get_function_trace/xdebug_dump_function_trace() because of the new
      idea of tracing.

= Fixed bugs:
    - Fixed bug #89: var_dump shows empty strings garbled.
    - Fixed bug #85: Xdebug segfaults when no idekey is set.
    - Fixed bug #83: More than 32 parameters functions make xdebug crash.
    - Fixed bug #75: xdebug's var_dump implementation is not binary safe.
    - Fixed bug #73: komodo beta 4.3.7 crash.
    - Fixed bug #72: breakpoint_get returns wrong structure.
    - Fixed bug #69: Integer overflow in cachegrind summary.
    - Fixed bug #67: Filenames in Xdebug break URI RFC with spaces.
    - Fixed bug #64: Missing include of xdebug_compat.h.
    - Fixed bug #57: Crash with overloading functions.
    - Fixed bug #54: source command did not except missing -f parameter.
    - Fixed bug #53: Feature get misusing the supported attribute.
    - Fixed bug #51: Only start a debug session if XDEBUG_SESSION_START is
      passed as GET or POST parameter, or the DBGP_COOKIE is send to the server.
      Passing XDEBUG_SESSION_STOP as GET/POST parameter will end the debug
      session and removes the cookie again. The cookie is also passed to the
      remote handler backends; for DBGp it is added to the <init> packet.
    - Fixed bug #49: Included file's names should not be stored by address.
    - Fixed bug #44: Script time-outs should be disabled when debugging.
    = Fixed bug #36: GDB handler using print causes segfault with wrong syntax
    - Fixed bug #33: Implemented the use of the ZEND_POST_DEACTIVATE hook. Now we
      can handle destructors safely too.
    - Fixed bug #32: Unusual dynamic variables cause xdebug to crash.";}i:26;a:5:{s:7:"version";a:2:{s:7:"release";s:5:"1.3.1";s:3:"api";s:5:"1.3.1";}s:9:"stability";a:2:{s:7:"release";s:6:"stable";s:3:"api";s:6:"stable";}s:4:"date";s:10:"2004-04-06";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:263:"= Fixed profiler to aggregate class/method calls correctly. (Robert Beenen)
= Fixed debugclient to initialize socket structure correctly. (Brandon Philips
  and David Sklar)
= GDB: Fixed bug where the source file wasn't closed after a "source" command.
  (Derick)";}i:27;a:5:{s:7:"version";a:2:{s:7:"release";s:5:"1.3.0";s:3:"api";s:5:"1.3.0";}s:9:"stability";a:2:{s:7:"release";s:6:"stable";s:3:"api";s:6:"stable";}s:4:"date";s:10:"2003-09-17";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:223:"= Fixed segfault where a function name didn't exist in case of a
 "call_user_function". (Derick)
= Fixed reading a filename in case of an callback to a PHP function from an
  internal function (like "array_map()"). (Derick)";}i:28;a:5:{s:7:"version";a:2:{s:7:"release";s:8:"1.3.0rc1";s:3:"api";s:8:"1.3.0rc1";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2003-09-17";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:1498:"= Fixed bug with wrong file names for functions called from call_user_*().
  (Derick)
+ Added the option "dump_superglobals" to the remote debugger. If you set this
  option to 0 the "show-local" and similar commands will not return any data
  from superglobals anymore. (Derick)
= Fixed bug #2: "pear package" triggers a segfault. (Derick)
= Fixed crash bug when a function had sprintf style parameters (ie.
  strftime()). (Derick)
+ Added "id" attribute to <var /> elements in responses from the remove
  debugger when the response method is XML. This makes it possible to
  distinguish between unique elements by use of recursion for example. (Derick)
= Improved performance greatly by doing lazy folding of variables outside
  trace mode. (Derick)
= Fixed a bug with "quit", if it was used it disabled the extension for the
  current process. (Derick)
+ Added the "full" argument to the remote command "backtrace". When this
  argument is passed, the local variables will be returned to for each frame in
  the stack. (Derick)
+ Implemented xdebug_time_index() which returns the time passed since the
  start of the script. This change also changes the output of the tracing
  functions as the start time will no longer be the first function call, but
  the real start time of the script. (Derick)
+ Implemented the "show-local" command (shows all local variables in the
  current scope including all contents). (Derick)
+ Implemented conditions for breakpoints in the "break" command. (Derick)";}i:29;a:5:{s:7:"version";a:2:{s:7:"release";s:5:"1.2.0";s:3:"api";s:5:"1.2.0";}s:9:"stability";a:2:{s:7:"release";s:6:"stable";s:3:"api";s:6:"stable";}s:4:"date";s:10:"2003-04-21";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:39:"= Fixed compilation on MacOSX. (Derick)";}i:30;a:5:{s:7:"version";a:2:{s:7:"release";s:8:"1.2.0rc2";s:3:"api";s:8:"1.2.0rc2";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2003-04-15";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:109:"= Fixed handling Windows paths in the debugger. (Derick)
= Fixed getting zvals out of Zend Engine 2. (Derick)";}i:31;a:5:{s:7:"version";a:2:{s:7:"release";s:8:"1.2.0rc1";s:3:"api";s:8:"1.2.0rc1";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2003-04-06";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:862:"+ Added code coverage functions to check which lines and how often they were
  touched during execution. (Derick)
+ Made Xdebug compatible with Zend Engine 2. (Derick)
+ Added dumping of super globals on errors. (Harald Radi)
+ Added XML protocol for the debugger client. (Derick)
= Fixed handling of "continue" (so that it also continues with the script).
  (Derick)
+ Additions to the remote debugger: "eval" (evaluate any PHP code from the
  debugger client). (Derick)
+ Added profiling support to xdebug. This introduces 3 new functions,
  xdebug_start_profiling() that begins profiling process, 
  xdebug_stop_profiling() that ends the profiling process and
  xdebug_dump_function_trace() that dumps the profiling data. (Ilia)
+ Implemented the "kill" (kills the running script) and "delete" (removes
  a breakpoint on a specified element) command. (Derick)";}i:32;a:5:{s:7:"version";a:2:{s:7:"release";s:5:"1.1.0";s:3:"api";s:5:"1.1.0";}s:9:"stability";a:2:{s:7:"release";s:6:"stable";s:3:"api";s:6:"stable";}s:4:"date";s:10:"2002-11-11";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:357:"+ Implemented the "list" (source listing), "print" (printing variable
  contents), "show" (show all variables in the scope), "step" (step through
  execution), "pwd" (print working directory), "next" (step over) and "finish"
  (step out) commands for the remote debugger. (Derick)
= Fixed lots of small bugs, under them memory leaks and crash bugs. (Derick)";}i:33;a:5:{s:7:"version";a:2:{s:7:"release";s:9:"1.1.0pre2";s:3:"api";s:9:"1.1.0pre2";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2002-10-29";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:346:"+ Implemented class::method, object->method and file.ext:line style
  breakpoints. (Derick)
+ Added xdebug.collect_params setting. If this setting is on (the default)
  then Xdebug collects all parameters passed to functions, otherwise they
  are not collected at all. (Derick)
+ Implemented correct handling of include/require and eval. (Derick)";}i:34;a:5:{s:7:"version";a:2:{s:7:"release";s:9:"1.1.0pre1";s:3:"api";s:9:"1.1.0pre1";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2002-10-22";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:556:"+ Added automatic starting of function traces (xdebug.auto_trace, defaulting to
  "off"). (Derick)
- Xdebug no longer supports PHP versions below PHP 4.3.0pre1. (Derick)
+ Added gdb compatible debugger handler with support for simple (function only)
  breakpoints. (Derick)
= Implemented a new way to get class names and file names. (Derick, Thies C.
  Arntzen <thies@thieso.net>)
+ Added time-index and memory footprint to CLI dumps. (Derick)
+ Implemented remote debugger handler abstraction. (Derick)
+ Added a php3 compatible debugger handler. (Derick)";}i:35;a:5:{s:7:"version";a:2:{s:7:"release";s:8:"1.0.0rc1";s:3:"api";s:8:"1.0.0rc1";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2002-09-01";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:382:"+ Implemented gathering of parameters to internal functions (only available
  in combination with PHP 4.3.0-dev). (Derick)
= Implemented a new way to get class names and file names. (Derick, Thies C.
  Arntzen >thies@thieso.net<)
+ Added support for error messages with stack trace in syslog. (Sergio
  Ballestrero >s.ballestrero@planetweb.it<)
= Windows compilation fixes. (Derick)";}i:36;a:5:{s:7:"version";a:2:{s:7:"release";s:5:"0.9.0";s:3:"api";s:5:"0.9.0";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2002-06-16";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:663:"= Fixed a memory leak in delayed included files. (Derick)
- Added support for PHP 4.1.2. (Derick)
= Rewrote xdebug_get_function_stack() and xdebug_get_function_trace() to return
  data in multidimensional arrays. (Derick)
= Fixed compiling without memory limit enabled (Sander Roobol, Derick)
- Add support for classnames, variable include files and variable
  function names. (Derick)
- Implemented links to the PHP Manual in traces. (Derick)
- Added timestamps and memory usage to function traces. (Derick)
= Fixed crash when using an user defined session handler. (Derick)
+ Implemented variable function names ($a = 'foo'; $f();) for use in
  traces. (Derick)";}i:37;a:5:{s:7:"version";a:2:{s:7:"release";s:5:"0.8.0";s:3:"api";s:5:"0.8.0";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2002-05-26";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:932:"+ Implemented much better parameter tracing for user defined
  functions. (Derick)
= Renamed xdebug_get_function_trace() to xdebug_dump_function_trace().
  (Derick)
= Implemented new xdebug_get_function_trace() to return the function trace in
  an array. (Derick)
+ Added a parameter to xdebug_start_trace(). When this parameter is used,
  xdebug will dump a function trace to the filename which this parameter
  speficies. (Derick)
- Fix a problem with nested member functions. (Derick)
= Make configure scripts work with PHP 4.2.x. (Derick)
+ Implemented handling single-dimensional constant arrays passed to a
  function. (Derick)
= Fix function traces in windows. (Derick)
+ Implemented function traces, which you can start and stop with
  xdebug_start_trace() and xdebug_stop_trace(). You can view the trace by using
  the return array from xdebug_get_function_trace(). (Derick)
= Fixed segfaults with xdebug_call_*(). (Derick)";}i:38;a:5:{s:7:"version";a:2:{s:7:"release";s:5:"0.7.0";s:3:"api";s:5:"0.7.0";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2002-05-08";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:50:"http://www.opensource.org/licenses/bsd-license.php";}s:8:"_content";s:9:"BSD style";}s:5:"notes";s:551:"+ Implemented handling of static method calls (foo::bar). (Derick)
+ Added correct handling of include(_once)/require(_once) and eval().
  (Derick)
+ Added ini setting to change the default setting for enabling showing
  enhanced error messages. (Defaults to "On"). (Derick)
+ Added the functions xdebug_enable() and xdebug_disable() to change the
  showing of stack traces from within your code. (Derick)
= Fixed the extension to show all errors. (Derick)
+ Implemented xdebug_memory_usage() which returns the memory in use by PHPs
  engine. (Derick)";}}}s:8:"filelist";a:7:{s:30:"contrib/tracefile-analyser.php";a:4:{s:6:"md5sum";s:32:"102ef6329f8761156a14d290450d378d";s:4:"name";s:30:"contrib/tracefile-analyser.php";s:4:"role";s:3:"doc";s:12:"installed_as";s:57:"/usr/share/doc/pear/xdebug/contrib/tracefile-analyser.php";}s:14:"contrib/xt.vim";a:4:{s:6:"md5sum";s:32:"75cb5843f8d6ff93cb5eaa7b062dc14a";s:4:"name";s:14:"contrib/xt.vim";s:4:"role";s:3:"doc";s:12:"installed_as";s:41:"/usr/share/doc/pear/xdebug/contrib/xt.vim";}s:9:"Changelog";a:4:{s:6:"md5sum";s:32:"0b38b5e4f903060d7ea77474f6af901f";s:4:"name";s:9:"Changelog";s:4:"role";s:3:"doc";s:12:"installed_as";s:36:"/usr/share/doc/pear/xdebug/Changelog";}s:7:"CREDITS";a:4:{s:6:"md5sum";s:32:"8f9a93feba6ff23c4bc1bc2929babcc4";s:4:"name";s:7:"CREDITS";s:4:"role";s:3:"doc";s:12:"installed_as";s:34:"/usr/share/doc/pear/xdebug/CREDITS";}s:7:"LICENSE";a:4:{s:6:"md5sum";s:32:"34df3a274aa12b795417c65634c07f16";s:4:"name";s:7:"LICENSE";s:4:"role";s:3:"doc";s:12:"installed_as";s:34:"/usr/share/doc/pear/xdebug/LICENSE";}s:4:"NEWS";a:4:{s:6:"md5sum";s:32:"4b9f3173f139a4ca39a0dbc8eebf7a9d";s:4:"name";s:4:"NEWS";s:4:"role";s:3:"doc";s:12:"installed_as";s:31:"/usr/share/doc/pear/xdebug/NEWS";}s:6:"README";a:4:{s:6:"md5sum";s:32:"81e13d08e216627246f59d57a5fb9db9";s:4:"name";s:6:"README";s:4:"role";s:3:"doc";s:12:"installed_as";s:33:"/usr/share/doc/pear/xdebug/README";}}s:12:"_lastversion";N;s:7:"dirtree";a:2:{s:34:"/usr/share/doc/pear/xdebug/contrib";b:1;s:26:"/usr/share/doc/pear/xdebug";b:1;}s:3:"old";a:7:{s:7:"version";s:5:"2.1.4";s:12:"release_date";s:10:"2012-03-12";s:13:"release_state";s:6:"stable";s:15:"release_license";s:9:"BSD style";s:13:"release_notes";s:597:"= Fixed bugs:

	- Fixed bug #788: Collect errors eats fatal errors.
	- Fixed bug #787: Segmentation Fault with PHP header_remove().
	- Fixed bug #778: Xdebug session in Eclipse crash whenever it run into
	  simplexml_load_string call.
	- Fixed bug #756: Added support for ZEND_*_*_OBJ and self::*.
	- Fixed bug #747: Still problem with error message and soap client / soap
	  server.
	- Fixed bug #744: new lines in a PHP file from Windows are displayed with
	  an extra white line with var_dump().
	- Fixed an issue with debugging and the eval command.
	- Fixed compilation with ZTS on PHP < 5.3.";s:12:"release_deps";a:2:{i:0;a:4:{s:4:"type";s:3:"php";s:3:"rel";s:2:"ge";s:7:"version";s:5:"5.1.0";s:8:"optional";s:2:"no";}i:1;a:6:{s:4:"type";s:3:"pkg";s:7:"channel";s:12:"pear.php.net";s:4:"name";s:4:"PEAR";s:3:"rel";s:2:"ge";s:7:"version";s:7:"1.4.0b1";s:8:"optional";s:2:"no";}}s:11:"maintainers";a:1:{i:0;a:5:{s:4:"name";s:14:"Derick Rethans";s:5:"email";s:17:"derick@xdebug.org";s:6:"active";s:3:"yes";s:6:"handle";s:6:"derick";s:4:"role";s:4:"lead";}}}s:10:"xsdversion";s:3:"2.0";s:13:"_lastmodified";i:1337943282;}